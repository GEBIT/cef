// Copyright (c) 2023 Marshall A. Greenblatt. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//    * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//    * Neither the name of Google Inc. nor the name Chromium Embedded
// Framework nor the names of its contributors may be used to endorse
// or promote products derived from this software without specific prior
// written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//
// $hash=809bc4c4af973ce5724a8e2d6d8398407b3f2ad1$
//

#ifndef CEF_INCLUDE_CAPI_CEF_AUTHENTICATOR_RESULT_HANDLER_CAPI_H_
#define CEF_INCLUDE_CAPI_CEF_AUTHENTICATOR_RESULT_HANDLER_CAPI_H_
#pragma once

#include "include/capi/cef_base_capi.h"

#ifdef __cplusplus
extern "C" {
#endif

///
/// Handler structure used to signal the (intermediate) result of a webauthn
/// authentication attempt from Chromium to the embedder.
///
typedef struct _cef_authenticator_result_handler_t {
  ///
  /// Base structure.
  ///
  cef_base_ref_counted_t base;

  ///
  /// The authentication attempt has failed. This is a final call.
  ///
  void(CEF_CALLBACK* on_failure)(
      struct _cef_authenticator_result_handler_t* self,
      cef_authenticator_failure_reason_t reason);

  ///
  /// The authentication has succeeded. This is a final call.
  ///
  void(CEF_CALLBACK* on_success)(
      struct _cef_authenticator_result_handler_t* self);

  ///
  /// The authentication requires the user to conclude token generation
  /// (typically by physically tapping the hardware token again). This
  /// communicates an intermediate stage of the authentication (so a call to
  /// OnSuccess or OnFailure will follow later).
  ///
  void(CEF_CALLBACK* on_finish_collect_token)(
      struct _cef_authenticator_result_handler_t* self);
} cef_authenticator_result_handler_t;

#ifdef __cplusplus
}
#endif

#endif  // CEF_INCLUDE_CAPI_CEF_AUTHENTICATOR_RESULT_HANDLER_CAPI_H_
