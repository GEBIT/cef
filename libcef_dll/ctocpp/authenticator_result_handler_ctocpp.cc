// Copyright (c) 2023 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=009467a438083425cea28e1e165337ff907f8c04$
//

#include "libcef_dll/ctocpp/authenticator_result_handler_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
void CefAuthenticatorResultHandlerCToCpp::OnFailure(
    AuthenticationFailureReason reason) {
  cef_authenticator_result_handler_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, on_failure)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->on_failure(_struct, reason);
}

NO_SANITIZE("cfi-icall") void CefAuthenticatorResultHandlerCToCpp::OnSuccess() {
  cef_authenticator_result_handler_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, on_success)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->on_success(_struct);
}

NO_SANITIZE("cfi-icall")
void CefAuthenticatorResultHandlerCToCpp::OnFinishCollectToken() {
  cef_authenticator_result_handler_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, on_finish_collect_token)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->on_finish_collect_token(_struct);
}

// CONSTRUCTOR - Do not edit by hand.

CefAuthenticatorResultHandlerCToCpp::CefAuthenticatorResultHandlerCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

CefAuthenticatorResultHandlerCToCpp::~CefAuthenticatorResultHandlerCToCpp() {}

template <>
cef_authenticator_result_handler_t*
CefCToCppRefCounted<CefAuthenticatorResultHandlerCToCpp,
                    CefAuthenticatorResultHandler,
                    cef_authenticator_result_handler_t>::
    UnwrapDerived(CefWrapperType type, CefAuthenticatorResultHandler* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
CefWrapperType
    CefCToCppRefCounted<CefAuthenticatorResultHandlerCToCpp,
                        CefAuthenticatorResultHandler,
                        cef_authenticator_result_handler_t>::kWrapperType =
        WT_AUTHENTICATOR_RESULT_HANDLER;
